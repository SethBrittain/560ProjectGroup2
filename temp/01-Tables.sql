CREATE TABLE public.Organizations
( 
    OrganizationId INT IDENTITY(1,1) PRIMARY KEY,
    [Name] NVARCHAR(64) NOT NULL,
    Active BIT NOT NULL DEFAULT 1,
    CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
    UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())

    UNIQUE([Name])
)

CREATE TABLE public.Users
(
    UserId INT IDENTITY(1,1) PRIMARY KEY,
	OrganizationId INT NOT NULL FOREIGN KEY REFERENCES public.Organizations(OrganizationId),
    Email NVARCHAR(128) NOT NULL UNIQUE,
	FirstName NVARCHAR(64) NOT NULL,
    LastName NVARCHAR(64) NOT NULL,
    Title NVARCHAR(64),
    ProfilePhoto NVARCHAR(max) NULL,
	Active BIT NOT NULL DEFAULT (1),
    ApiKey VARBINARY(max) DEFAULT (HASHBYTES('SHA2_256', SUBSTRING(CAST (NEWID() AS nvarchar(36)), 1, 32))) NOT NULL,
    CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
    UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
)

 CREATE TABLE public.Groups
(
    GroupId INT IDENTITY(1,1) PRIMARY KEY,
    OrganizationId INT NOT NULL FOREIGN KEY REFERENCES public.Organizations(OrganizationId),
	[Name] NVARCHAR(64) NOT NULL,
    Active BIT NOT NULL DEFAULT 1,
    CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
    UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())

	UNIQUE([Name], OrganizationId)
)

CREATE TABLE public.Memberships
(
    GroupId INT NOT NULL FOREIGN KEY REFERENCES public.Groups(GroupId),
    UserId INT NOT NULL FOREIGN KEY REFERENCES public.Users(UserId),
	CreatedOn DATETIMEOFFSET DEFAULT(SYSDATETIMEOFFSET())

    UNIQUE(GroupId, UserId),
	CONSTRAINT [user_must_not_be_in_group_twice] UNIQUE(GroupId, UserId),
	CONSTRAINT [user_and_group_must_have_same_organization] CHECK(public.fn_CheckOrganizations(UserId, GroupId) = 1)
)

CREATE TABLE public.Channels
(
    ChannelId INT IDENTITY(1,1) PRIMARY KEY,
	GroupId INT FOREIGN KEY REFERENCES public.Groups(GroupId),
    [Name] NVARCHAR(64) NOT NULL,
    CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
    UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),

    UNIQUE([Name], GroupId)
)

CREATE TABLE public.Messages
(
    MsgId INT IDENTITY(1,1) PRIMARY KEY,
    SenderId INT NOT NULL FOREIGN KEY REFERENCES public.Users(UserId),
	ChannelId INT NULL FOREIGN KEY REFERENCES public.Channels(ChannelId),
	RecipientId INT NULL FOREIGN KEY REFERENCES public.Users(UserId),
    [Message] NVARCHAR(512) NOT NULL,
    CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
    UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
	IsDeleted BIT NOT NULL DEFAULT 0,
    
	CONSTRAINT [must_have_exactly_one_receiver] CHECK(
		Messages.RecipientId IS NULL AND Messages.ChannelId IS NOT NULL OR Messages.ChannelId IS NULL AND Messages.RecipientId IS NOT NULL)
)
